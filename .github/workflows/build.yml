name: Build EIA Salt vs Price

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: false
        default: '2024-08-01'
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: false
        default: ''
      all_data:
        description: 'Plot all returned weeks (ignore month filters)? true/false'
        required: false
        default: 'false'
  schedule:
    # Every Thursday at 17:30 UTC (≈ 12:30 p.m. Central during DST)
    - cron: '30 17 * * 4'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (diagnostic)
        run: |
          pwd
          ls -la
          echo "---- up to 3 levels ----"
          find . -maxdepth 3 -type d -print

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (auto-detect requirements.txt)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            REQ=$(find . -maxdepth 4 -type f -name "requirements.txt" | head -n1)
            if [ -z "$REQ" ]; then
              echo "ERROR: requirements.txt not found anywhere in repo"; exit 1
            fi
            echo "Using $REQ"
            pip install -r "$REQ"
          fi

      - name: Check EIA_API_KEY presence
        run: |
          if [ -z "${{ secrets.EIA_API_KEY }}" ]; then
            echo "EIA_API_KEY is NOT set. Add it in Settings → Secrets and variables → Actions."; exit 1
          fi
          echo "EIA_API_KEY is present."

      - name: Locate src (prefer repo-root; exclude .github)
        id: locate
        run: |
          # Prefer a repo-root src containing eia_storage_plot
          if [ -d src ] && [ -d src/eia_storage_plot ]; then
            SRCDIR="src"
          else
            # Find first src that contains eia_storage_plot outside .github
            SRCDIR=$(find . -path "./.github" -prune -o -type d -name "eia_storage_plot" -print | head -n1 | xargs -r dirname | xargs -r dirname)
          fi

          if [ -z "$SRCDIR" ] || [ ! -d "$SRCDIR/eia_storage_plot" ]; then
            echo "ERROR: Could not find src/eia_storage_plot in repo."; exit 1
          fi

          echo "Using SRCDIR: $SRCDIR"
          echo "src_path=$SRCDIR" >> $GITHUB_OUTPUT

      - name: Run report (inline runner; no scripts/run_report.py needed)
        env:
          EIA_API_KEY: ${{ secrets.EIA_API_KEY }}
          START: ${{ github.event.inputs.start_date }}
          END: ${{ github.event.inputs.end_date }}
          ALL_DATA: ${{ github.event.inputs.all_data }}
        run: |
          SRCDIR="${{ steps.locate.outputs.src_path }}"
          # Build PYTHONPATH so eia_storage_plot can be imported
          export PYTHONPATH="$PYTHONPATH:$(python -c 'import os,sys;print(os.path.realpath(sys.argv[1]))' "$SRCDIR")"

          python - <<'PYCODE'
          from __future__ import annotations
          import os, shutil
          from datetime import date
          from eia_storage_plot.fetch import build_weekly_join
          from eia_storage_plot.plot import filter_windows, make_scatter

          START = os.getenv("START") or "2024-08-01"
          END = os.getenv("END") or date.today().strftime("%Y-%m-%d")
          ALL = (os.getenv("ALL_DATA") or "false").lower() == "true"

          print(f"[runner] start={START} end={END} all_data={ALL}")

          df = build_weekly_join(START, END)

          os.makedirs("out/data", exist_ok=True)
          os.makedirs("out/plots", exist_ok=True)
          df.to_csv("out/data/merged.csv", index=False)

          plot_df = df if ALL else filter_windows(df)

          out_png = "out/plots/salt_vs_henryhub.png"
          make_scatter(plot_df, out_png)

          os.makedirs("docs/plots", exist_ok=True)
          shutil.copyfile(out_png, "docs/plots/salt_vs_henryhub.png")

          print("[runner] rows merged:", len(df))
          print("[runner] rows plotted:", len(plot_df))
          PYCODE

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eia-salt-vs-price-outputs
          path: |
            out/**
            docs/plots/salt_vs_henryhub.png

      - name: Commit outputs to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add out/data/merged.csv docs/plots/salt_vs_henryhub.png || true
          git commit -m "CI: update data and plot [skip ci]" || echo "No changes to commit"
          git push || true
